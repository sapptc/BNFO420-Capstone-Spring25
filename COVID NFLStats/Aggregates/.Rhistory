median_cpu_freq <- median(intel_data$CPU.Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU.Frequency)
median_cpu_freq
iqr_cpu_freq
# Part 1 (f)
avg_cpu_freq_per_ram <- tapply(intel_data$CPU_Frequency, intel_data$RAM, mean)
# Check if there are significant differences
avg_cpu_freq_per_ram
# Part 2
mean_val <- 1
variance <- 2.25
sd_val <- sqrt(variance)
x_vals <- seq(-5, 7, length.out = 100)
# Create a density plot
plot(x_vals, dnorm(x_vals, mean = mean_val, sd = sd_val), type = "l", col = "red",
main = "Density Curve of Normal Distribution with Mean = 1, Variance = 2.25",
xlab = "X", ylab = "Density")
legend("topright", legend = c("Mean = 1, Variance = 2.25"), col = c("red"), lty = 1)
# Save the plot
dev.copy(png, "normal_density_curve.png")
dev.off()
#Tyler Sapp
#STAT-321-002
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Part 1 (a)
barplot(table(laptop_data$RAM),
main = "Number of Laptops by RAM",
xlab = "Count",
ylab = "RAM Size (GB)",
horiz = TRUE,
col = "lightblue")
# Save the plot
dev.copy(png, "laptops_by_ram.png")
dev.off()
# Part 1 (b)
op_sys_counts <- table(laptop_data$OpSys, laptop_data$RAM)
barplot(op_sys_counts,
beside = TRUE,
col = rainbow(ncol(op_sys_counts)),
main = "Number of Laptops by Operating System and RAM",
xlab = "Operating System",
ylab = "Count",
legend = colnames(op_sys_counts))
# Save the plot
dev.copy(png, "ram_by_os.png")
dev.off()
# Part 1 (c)
hist(laptop_data$Inches,
breaks = 10,
main = "Histogram of Laptop Screen Sizes",
xlab = "Screen Size (Inches)",
col = "lightblue",
border = "black")
# Save the plot
dev.copy(png, "screen_sizes_histogram.png")
dev.off()
# Part 1 (d)
intel_data <- subset(laptop_data, CPU_Company == "Intel")
boxplot(intel_data$CPU_Frequency,
main = "Boxplot of CPU Frequency for Intel CPUs",
ylab = "CPU Frequency (GHz)",
col = "lightblue")
# Save the plot
dev.copy(png, "intel_cpu_frequency_boxplot.png")
dev.off()
# Part 1 (e)
median_cpu_freq <- median(intel_data$CPU.Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU.Frequency)
median_cpu_freq
iqr_cpu_freq
# Part 1 (f)
avg_cpu_freq_per_ram <- tapply(intel_data$CPU_Frequency, intel_data$RAM, mean)
# Check if there are significant differences
avg_cpu_freq_per_ram
# Part 2
mean_val <- 1
variance <- 2.25
sd_val <- sqrt(variance)
x_vals <- seq(-5, 7, length.out = 100)
# Create a density plot
plot(x_vals, dnorm(x_vals, mean = mean_val, sd = sd_val), type = "l", col = "red",
main = "Density Curve of Normal Distribution with Mean = 1, Variance = 2.25",
xlab = "X", ylab = "Density")
legend("topright", legend = c("Mean = 1, Variance = 2.25"), col = c("red"), lty = 1)
# Save the plot
dev.copy(png, "normal_density_curve.png")
dev.off()
# Part 1 (e)
median_cpu_freq <- median(intel_data$CPU.Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU.Frequency)
median_cpu_freq
iqr_cpu_freq
# Part 1 (e)
median_cpu_freq <- median(intel_data$CPU.Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU.Frequency)
median_cpu_freq
iqr_cpu_freq
# Part 1 (e)
median_cpu_freq <- median(intel_data$CPU_Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU.Frequency)
median_cpu_freq
iqr_cpu_freq
# Part 1 (e)
median_cpu_freq <- median(intel_data$CPU_Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU_Frequency)
median_cpu_freq
iqr_cpu_freq
#Tyler Sapp
#STAT-321-002
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Part 1 (a)
barplot(table(laptop_data$RAM),
main = "Number of Laptops by RAM",
xlab = "Count",
ylab = "RAM Size (GB)",
horiz = TRUE,
col = "lightblue")
# Save the plot
dev.copy(png, "laptops_by_ram.png")
dev.off()
# Part 1 (b)
op_sys_counts <- table(laptop_data$OpSys, laptop_data$RAM)
barplot(op_sys_counts,
beside = TRUE,
col = rainbow(ncol(op_sys_counts)),
main = "Number of Laptops by Operating System and RAM",
xlab = "Operating System",
ylab = "Count",
legend = colnames(op_sys_counts))
# Save the plot
dev.copy(png, "ram_by_os.png")
dev.off()
# Part 1 (c)
hist(laptop_data$Inches,
breaks = 10,
main = "Histogram of Laptop Screen Sizes",
xlab = "Screen Size (Inches)",
col = "lightblue",
border = "black")
# Save the plot
dev.copy(png, "screen_sizes_histogram.png")
dev.off()
# Part 1 (d)
intel_data <- subset(laptop_data, CPU_Company == "Intel")
boxplot(intel_data$CPU_Frequency,
main = "Boxplot of CPU Frequency for Intel CPUs",
ylab = "CPU Frequency (GHz)",
col = "lightblue")
# Save the plot
dev.copy(png, "intel_cpu_frequency_boxplot.png")
dev.off()
# Part 1 (e)
median_cpu_freq <- median(intel_data$CPU_Frequency)
iqr_cpu_freq <- IQR(intel_data$CPU_Frequency)
median_cpu_freq
iqr_cpu_freq
# Part 1 (f)
avg_cpu_freq_per_ram <- tapply(intel_data$CPU_Frequency, intel_data$RAM, mean)
# Check if there are significant differences
avg_cpu_freq_per_ram
# Part 2
mean_val <- 1
variance <- 2.25
sd_val <- sqrt(variance)
x_vals <- seq(-5, 7, length.out = 100)
# Create a density plot
plot(x_vals, dnorm(x_vals, mean = mean_val, sd = sd_val), type = "l", col = "red",
main = "Density Curve of Normal Distribution with Mean = 1, Variance = 2.25",
xlab = "X", ylab = "Density")
legend("topright", legend = c("Mean = 1, Variance = 2.25"), col = c("red"), lty = 1)
# Save the plot
dev.copy(png, "normal_density_curve.png")
dev.off()
laptop_data <- read.csv("Laptop Price.csv")
# Create a pairs plot
pairs(laptop_data[, c("CPU_Frequency", "RAM", "Weight", "Price")],
main = "Pairs Plot of Laptop Attributes",
col = "blue")
colnames(laptop_data)
laptop_data <- read.csv("Laptop Price.csv")
# Create a pairs plot
pairs(laptop_data[, c("CPU_Frequency", "RAM..GB.", "Weight..kg.", "Price..Euro.")],
main = "Pairs Plot of Laptop Attributes",
col = "blue")
laptop_data <- read.csv("Laptop Price.csv")
# Create a pairs plot
pairs(laptop_data[, c("CPU_Frequency..GHz.", "RAM..GB.", "Weight..kg.", "Price..Euro.")],
main = "Pairs Plot of Laptop Attributes",
col = "blue")
# Compute correlations
correlations <- cor(laptop_data[, c("CPU_Frequency..GHz.", "RAM..GB.", "Weight..kg.", "Price..Euro.")], use = "complete.obs")
correlations
dev.copy(png, "pairs_plot.png")
dev.off()
#Part b
ssd_laptops <- subset(laptop_data, grepl("SSD", Memory, ignore.case = TRUE))
ssd_laptops
# Linear regression
model <- lm(Price ~ CPU_Frequency, data = laptop_data)
#Part c
# Linear regression
model <- lm(Price..Euro. ~ CPU_Frequency..GHz., data = laptop_data)
# Summary of the model
summary(model)
# Compute confidence intervals for regression coefficients
conf_intervals <- confint(model, level = 0.95)
conf_intervals
#Part 2a
f <- function(x) {
ifelse(x >= 0, x^2 + 1, -x^2 - 1)
}
#part2b
set.seed(123)  # For reproducibility
# Generate 500 samples
samples <- rnorm(500, mean = 0, sd = sqrt(2))
# Apply the function to these samples
X <- f(samples)
X
# Plot histogram
hist(X, breaks = 30, col = "lightblue", border = "black",
main = "Histogram of Transformed Dataset X",
xlab = "X", ylab = "Frequency")
# Save the plot
dev.copy(png, "transformed_histogram.png")
dev.off()
#Tyler Sapp
#STAT-321
#Homework 4
#Part 1a
laptop_data <- read.csv("Laptop Price.csv")
# Create a pairs plot
pairs(laptop_data[, c("CPU_Frequency..GHz.", "RAM..GB.", "Weight..kg.", "Price..Euro.")],
main = "Pairs Plot of Laptop Attributes",
col = "blue")
# Compute correlations
correlations <- cor(laptop_data[, c("CPU_Frequency..GHz.", "RAM..GB.", "Weight..kg.", "Price..Euro.")], use = "complete.obs")
correlations
dev.copy(png, "pairs_plot.png")
dev.off()
#Part 1b
ssd_laptops <- subset(laptop_data, grepl("SSD", Memory, ignore.case = TRUE))
ssd_laptops
#Part 1c
# Linear regression
model <- lm(Price..Euro. ~ CPU_Frequency..GHz., data = laptop_data)
# Summary of the model
summary(model)
# Compute confidence intervals for regression coefficients
conf_intervals <- confint(model, level = 0.95)
conf_intervals
#Part 2a
f <- function(x) {
ifelse(x >= 0, x^2 + 1, -x^2 - 1)
}
#Part 2b
set.seed(123)  # For reproducibility
# Generate 500 samples
samples <- rnorm(500, mean = 0, sd = sqrt(2))
# Apply the function to these samples
X <- f(samples)
X
#Part 2c
# Plot histogram
hist(X, breaks = 30, col = "lightblue", border = "black",
main = "Histogram of Transformed Dataset X",
xlab = "X", ylab = "Frequency")
# Save the plot
dev.copy(png, "transformed_histogram.png")
dev.off()
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price ~ CPU_Frequency + RAM + Weight, data = laptop_data)
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm('Price' ~ CPU_Frequency + RAM + Weight, data = laptop_data)
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price..(Euro). ~ CPU_Frequency + RAM + Weight, data = laptop_data)
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price ~ CPU_Frequency + RAM + Weight, data = laptop_data)
colnames(laptop_data)
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price..Euro. ~ CPU_Frequency + RAM..GB. + Weight..kg., data = laptop_data)
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price..Euro. ~ CPU_Frequency..GHz. + RAM..GB. + Weight..kg., data = laptop_data)
# Summary of the model to check significance
summary(model)
#Part1b
# Subset laptops with Core i7 and Core i5 CPUs
core_i7 <- subset(laptop_data, grepl("Core i7", CPU.Type, ignore.case = TRUE))
colnames(laptop_data)
#Part1b
# Subset laptops with Core i7 and Core i5 CPUs
core_i7 <- subset(laptop_data, grepl("Core i7", CPU_Type, ignore.case = TRUE))
core_i5 <- subset(laptop_data, grepl("Core i5", CPU_Type, ignore.case = TRUE))
# Create box plots
par(mfrow = c(1, 2))  # Arrange plots in one row with two subfigures
# Core i7
boxplot(core_i7$CPU_Frequency..GHz., main = "Core i7 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightblue")
# Core i5
boxplot(core_i5$CPU_Frequency..GHz., main = "Core i5 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightgreen")
# Reset plot layout
par(mfrow = c(1, 1))
# Perform a t-test
t_test_result <- t.test(core_i7$CPU_Frequency..GHz., core_i5$CPU_Frequency..GHz.)
t_test_result
#part1c
# Fit a model including CPU.Company as a categorical variable
model_cpu_company <- lm(Price ~ CPU_Company, data = laptop_data)
#part1c
# Fit a model including CPU.Company as a categorical variable
model_cpu_company <- lm(Price..Euro. ~ CPU_Company, data = laptop_data)
# Summary of the model
summary(model_cpu_company)
# To interpret the effects of each company:
coefficients <- coef(model_cpu_company)
coefficients
# Ensure CPU_Company is a factor and include all levels explicitly
laptop_data$CPU_Company <- factor(laptop_data$CPU_Company)
# Fit the model with CPU_Company as a categorical variable
model_cpu_company <- lm(Price..Euro. ~ CPU_Company, data = laptop_data)
# Display the summary of the model to see the coefficients for all levels
summary(model_cpu_company)
# Manually relevel to include a different reference category (if needed)
# For example, if you want AMD as the reference category:
laptop_data$CPU_Company <- relevel(laptop_data$CPU_Company, ref = "AMD")
# Refit the model with AMD as the reference
model_cpu_company_releveled <- lm(Price..Euro. ~ CPU_Company, data = laptop_data)
# Display the summary of the new model
summary(model_cpu_company_releveled)
#Tyler Sapp
#Stat321
#Final Exam
#Part 1a
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price..Euro. ~ CPU_Frequency..GHz. + RAM..GB. + Weight..kg., data = laptop_data)
# Summary of the model to check significance
summary(model)
#Part1b
# Subset laptops with Core i7 and Core i5 CPUs
core_i7 <- subset(laptop_data, grepl("Core i7", CPU_Type, ignore.case = TRUE))
core_i5 <- subset(laptop_data, grepl("Core i5", CPU_Type, ignore.case = TRUE))
# Create box plots
par(mfrow = c(1, 2))  # Arrange plots in one row with two subfigures
# Core i7
boxplot(core_i7$CPU_Frequency..GHz., main = "Core i7 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightblue")
# Core i5
boxplot(core_i5$CPU_Frequency..GHz., main = "Core i5 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightgreen")
# Reset plot layout
par(mfrow = c(1, 1))
# Perform a t-test
t_test_result <- t.test(core_i7$CPU_Frequency..GHz., core_i5$CPU_Frequency..GHz.)
t_test_result
#part1c
# Fit a model including CPU_Company as a categorical variable
model_cpu_company <- lm(Price..Euro. ~ CPU_Company, data = laptop_data)
# Summary of the model
summary(model_cpu_company)
# To interpret the effects of each company:
coefficients <- coef(model_cpu_company)
coefficients
colnames(laptop_data)
#part2a
set.seed(123)  # For reproducibility
# Generate the sequence
sequence <- numeric(2000)
sequence[seq(1, 2000, by = 2)] <- rnorm(1000, mean = 1, sd = sqrt(1.5))  # Odd indices
sequence[seq(2, 2000, by = 2)] <- rexp(1000, rate = 2)                   # Even indices
sequence
#part2b
# Compute the sequence of means (θn)
theta_n <- cumsum(sequence) / seq_along(sequence)
# Plot the sequence
plot(seq_along(theta_n), theta_n, type = "l", col = "blue", lwd = 2,
main = "Convergence of θn",
xlab = "n", ylab = "θn")
# Save the plot
dev.copy(png, "theta_convergence_plot.png")
dev.off()
#Tyler Sapp
#Stat321
#Final Exam
#Part 1a
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price..Euro. ~ CPU_Frequency..GHz. + RAM..GB. + Weight..kg., data = laptop_data)
# Summary of the model to check significance
summary(model)
#Part1b
# Subset laptops with Core i7 and Core i5 CPUs
core_i7 <- subset(laptop_data, grepl("Core i7", CPU_Type, ignore.case = TRUE))
core_i5 <- subset(laptop_data, grepl("Core i5", CPU_Type, ignore.case = TRUE))
# Create box plots
par(mfrow = c(1, 2))  # Arrange plots in one row with two subfigures
# Core i7
boxplot(core_i7$CPU_Frequency..GHz., main = "Core i7 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightblue")
# Core i5
boxplot(core_i5$CPU_Frequency..GHz., main = "Core i5 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightgreen")
# Reset plot layout
par(mfrow = c(1, 1))
# Perform a t-test
t_test_result <- t.test(core_i7$CPU_Frequency..GHz., core_i5$CPU_Frequency..GHz.)
t_test_result
#part1c
# Fit a model including CPU_Company as a categorical variable
model_cpu_company <- lm(Price..Euro. ~ CPU_Company, data = laptop_data)
# Summary of the model
summary(model_cpu_company)
# To interpret the effects of each company:
coefficients <- coef(model_cpu_company)
coefficients
#part2a
set.seed(123)  # For reproducibility
# Generate the sequence
sequence <- numeric(2000)
sequence[seq(1, 2000, by = 2)] <- rnorm(1000, mean = 1, sd = sqrt(1.5))  # Odd indices
sequence[seq(2, 2000, by = 2)] <- rexp(1000, rate = 2)                   # Even indices
sequence
#part2b
# Compute the sequence of means (θn)
theta_n <- cumsum(sequence) / seq_along(sequence)
# Plot the sequence
plot(seq_along(theta_n), theta_n, type = "l", col = "blue", lwd = 2,
main = "Convergence of θn",
xlab = "n", ylab = "θn")
# Save the plot
dev.copy(png, "theta_convergence_plot.png")
dev.off()
#Tyler Sapp
#Stat321
#Final Exam
#On my honor, I pledge that I have neither given nor received aid on this test.
#Part 1a
# Load the dataset
laptop_data <- read.csv("Laptop Price.csv")
# Fit the linear regression model
model <- lm(Price..Euro. ~ CPU_Frequency..GHz. + RAM..GB. + Weight..kg., data = laptop_data)
# Summary of the model to check significance
summary(model)
#Part1b
# Subset laptops with Core i7 and Core i5 CPUs
core_i7 <- subset(laptop_data, grepl("Core i7", CPU_Type, ignore.case = TRUE))
core_i5 <- subset(laptop_data, grepl("Core i5", CPU_Type, ignore.case = TRUE))
# Create box plots
par(mfrow = c(1, 2))  # Arrange plots in one row with two subfigures
# Core i7
boxplot(core_i7$CPU_Frequency..GHz., main = "Core i7 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightblue")
# Core i5
boxplot(core_i5$CPU_Frequency..GHz., main = "Core i5 CPU Frequency",
ylab = "CPU Frequency (GHz)", col = "lightgreen")
# Reset plot layout
par(mfrow = c(1, 1))
# Perform a t-test
t_test_result <- t.test(core_i7$CPU_Frequency..GHz., core_i5$CPU_Frequency..GHz.)
t_test_result
#part1c
# Fit a model including CPU_Company as a categorical variable
model_cpu_company <- lm(Price..Euro. ~ CPU_Company, data = laptop_data)
# Summary of the model
summary(model_cpu_company)
# To interpret the effects of each company:
coefficients <- coef(model_cpu_company)
coefficients
#part2a
set.seed(123)  # For reproducibility
# Generate the sequence
sequence <- numeric(2000)
sequence[seq(1, 2000, by = 2)] <- rnorm(1000, mean = 1, sd = sqrt(1.5))  # Odd indices
sequence[seq(2, 2000, by = 2)] <- rexp(1000, rate = 2)                   # Even indices
sequence
#part2b
# Compute the sequence of means (θn)
theta_n <- cumsum(sequence) / seq_along(sequence)
# Plot the sequence
plot(seq_along(theta_n), theta_n, type = "l", col = "blue", lwd = 2,
main = "Convergence of θn",
xlab = "n", ylab = "θn")
# Save the plot
dev.copy(png, "theta_convergence_plot.png")
dev.off()
setwd(C:\Users\Tyler\Documents\School\BNFO420\BNFO420-Capstone\NFLStats\Aggregates)
setwd(Users\Tyler\Documents\School\BNFO420\BNFO420-Capstone\NFLStats\Aggregates)
setwd('C:\Users\Tyler\Documents\School\BNFO420\BNFO420-Capstone\NFLStats\Aggregates')
setwd("C:/Users/Tyler/Documents/School/BNFO420/BNFO420-Capstone/NFLStats/Aggregates")
# Load necessary libraries
library(readxl)
install.packages("readxl")
# Load necessary libraries
library(readxl)
library(dplyr)
install.packages("dplyr")
